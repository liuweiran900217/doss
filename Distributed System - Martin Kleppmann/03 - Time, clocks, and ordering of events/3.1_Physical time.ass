[Script Info]
; Script generated by Aegisub 3.2.2
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1280
PlayResY: 720

[Aegisub Project Garbage]
Last Style Storage: Default
Audio File: 3.1_Physical time.mp4
Video File: 3.1_Physical time.mp4
Video AR Mode: 4
Video AR Value: 1.777778
Video Zoom Percent: 0.500000
Scroll Position: 321
Active Line: 346
Video Position: 36460

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding
Style: Default,微软雅黑,35,&H00FFFFFF,&H000000FF,&H00000000,&H00000000,-1,0,0,0,100,100,0,0,1,2,2,2,10,10,10,1

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
Dialogue: 0,0:00:00.00,0:00:05.00,Default,,0,0,0,,{\pos(639,50)}听译、时间轴：刘巍然（学酥）
Dialogue: 0,0:00:00.70,0:00:05.14,Default,,0,0,0,,大家好 欢迎大家来到分布式系统的第3课\NHello everyone. Welcome to the third lecture of distributed systems.
Dialogue: 0,0:00:05.14,0:00:07.16,Default,,0,0,0,,今天 我我会和大家讨论一个很有趣的内容\NToday, we're going to have fun talking about
Dialogue: 0,0:00:07.16,0:00:11.38,Default,,0,0,0,,即分布式系统中的时间、时钟、以及事件顺序\Ntime and clocks and ordering of events in a distributed system.
Dialogue: 0,0:00:11.38,0:00:15.38,Default,,0,0,0,,我们以一个小谜题开始我们的课程内容 这个难题发人深省\NSo, let me start with a little puzzle, something that you can ponder about.
Dialogue: 0,0:00:15.38,0:00:18.44,Default,,0,0,0,,我们将在本视频的最后阶段解决这个小谜题\NAnd I will resolve this towards the end of this video.
Dialogue: 0,0:00:18.44,0:00:24.20,Default,,0,0,0,,这是一个于2012年6月30日发生的真实事件\NSo, this is an incident, a real incident that occurred in 2012 on the 30th of June,
Dialogue: 0,0:00:24.20,0:00:28.90,Default,,0,0,0,,在那天 大量公司和服务的系统管理员\Nwhere system administrators at a whole bunch of different companies and services
Dialogue: 0,0:00:28.90,0:00:31.42,Default,,0,0,0,,因为某种原因经历了糟糕的一天\Nhad a really bad day, because for some reason,
Dialogue: 0,0:00:31.42,0:00:35.98,Default,,0,0,0,,大量服务器几乎在那天午夜的同一时刻\Na whole lot of servers all locked up, and stopped responding to requests
Dialogue: 0,0:00:35.98,0:00:39.24,Default,,0,0,0,,停止响应请求 像被冻结了一样\Nall around the same time, sometime in the middle of the night.
Dialogue: 0,0:00:39.24,0:00:41.34,Default,,0,0,0,,到底发生了什么？\NSo, what might have happened?
Dialogue: 0,0:00:41.34,0:00:46.76,Default,,0,0,0,,为什么大量公司的服务器在同一时刻出现了故障？\NWhy did servers across a whole bunch of different companies all fail at the same time?
Dialogue: 0,0:00:46.76,0:00:49.68,Default,,0,0,0,,我们会围绕这个问题开展讨论 一会就揭晓答案\NWe'll have a think about that and answer will come later.
Dialogue: 0,0:00:49.68,0:00:52.52,Default,,0,0,0,,我想和大家聊聊时间\NSo, I want to talk about time.
Dialogue: 0,0:00:52.52,0:00:57.42,Default,,0,0,0,,时间在分布式系统和操作系统中起到非常关键的作用\NAnd time is very useful in distributed systems and in operating systems.
Dialogue: 0,0:00:58.10,0:01:00.88,Default,,0,0,0,,我们简单提及时间的几个作用\NJust to remind you of a couple of uses of time.
Dialogue: 0,0:01:00.88,0:01:03.24,Default,,0,0,0,,举例来说 在操作系统调度器中\NFor example, in an operating system scheduler,
Dialogue: 0,0:01:03.24,0:01:07.26,Default,,0,0,0,,你希望每个进程在运行约10毫秒左右时执行一次上下文切换\Nyou want to context switch after a process has been running for 10 milliseconds maybe.
Dialogue: 0,0:01:07.26,0:01:09.84,Default,,0,0,0,,此时 你就需要度量这个10毫秒\NSo, you have to measure those 10 milliseconds.
Dialogue: 0,0:01:09.84,0:01:11.88,Default,,0,0,0,,如果你想实现某种超时机制\NIf you want to send some kind of timeout,
Dialogue: 0,0:01:12.42,0:01:14.34,Default,,0,0,0,,很显然 你需要度量指定的超时时间\Nthen, of course, you have to measure that time.
Dialogue: 0,0:01:14.34,0:01:17.20,Default,,0,0,0,,上一个讲座中 我们讨论了失效检查器\NLast lecture, we talked about failure detectors, which again,
Dialogue: 0,0:01:17.20,0:01:21.82,Default,,0,0,0,,失效检查器依赖于你在特定的时间周期内是否能收到响应\Nrely on measuring whether you got a response or not within a certain period of time.
Dialogue: 0,0:01:21.82,0:01:24.42,Default,,0,0,0,,如果你想通过网络重传消息\NIf you want to retry sending messages over a network,
Dialogue: 0,0:01:24.42,0:01:26.66,Default,,0,0,0,,你可能也需要在重传前先等待一个特定的时间\Nagain, you probably want to wait for a certain time.
Dialogue: 0,0:01:26.66,0:01:28.66,Default,,0,0,0,,所有这些都需要度量时间\NAll of those require measuring time.
Dialogue: 0,0:01:28.66,0:01:32.72,Default,,0,0,0,,另一个需要度量时间的地方是性能度量\NOther things that require measuring time are the performance measurements.
Dialogue: 0,0:01:32.72,0:01:37.08,Default,,0,0,0,,例如 度量进程执行了多长时间 究竟使用了多少CPU时间\NSo, how long has the process been running for, how much CPU time has it been using.
Dialogue: 0,0:01:37.08,0:01:40.80,Default,,0,0,0,,如果你想通过为系统配置相关参数来提高系统性能\NIf you want to profile a system in order to improve its performance,
Dialogue: 0,0:01:40.80,0:01:42.94,Default,,0,0,0,,你也需要度量时间\Nthat also relies on time measurement.
Dialogue: 0,0:01:42.94,0:01:46.58,Default,,0,0,0,,你可能希望在日志文件中记录日期和时间\NIn log files, you probably want to record the date and time
Dialogue: 0,0:01:46.58,0:01:48.28,Default,,0,0,0,,记录某个事件发生的日期和时间\Nat which a certain event happened.
Dialogue: 0,0:01:48.28,0:01:52.78,Default,,0,0,0,,例如 记录某个特定用户在哪个特定的日期和时间登录的系统\NSo, for example, a certain user logged in at a certain date, at a certain time.
Dialogue: 0,0:01:52.78,0:01:54.50,Default,,0,0,0,,你希望把这个信息记录在日志中\NYou want to record that in the log.
Dialogue: 0,0:01:54.50,0:01:57.66,Default,,0,0,0,,你可能希望在数据库中记录某个事件的发生时间\NIn databases, you might want to record when something happens,
Dialogue: 0,0:01:57.66,0:02:01.26,Default,,0,0,0,,例如 记录用户发生购买行为的时间\Nso, at which point did a user make a purchase, for example,
Dialogue: 0,0:02:01.26,0:02:04.76,Default,,0,0,0,,记录某笔交易是在哪一天发生的\Nwhat date at what time did that purchase occur.
Dialogue: 0,0:02:05.36,0:02:09.84,Default,,0,0,0,,还有个有趣的应用场景是 数据可能在某个特定的时间周期内可访问\NAn interesting one is data that is only valid for a certain period of time.
Dialogue: 0,0:02:09.84,0:02:13.86,Default,,0,0,0,,例如 你不希望数据永远存储在某个缓存区中\NSo, in a cache, for example, you might want data in the cache not to live forever,
Dialogue: 0,0:02:13.86,0:02:17.84,Default,,0,0,0,,当数据在缓存区存储一段时间后 就应该把数据从缓存区移除\Nbut to be expired from the cache after it has been there for a while.
Dialogue: 0,0:02:17.84,0:02:21.28,Default,,0,0,0,,我们可以用DNS来演示度量时间的一个具体例子\NSo, I'll give one concrete example of this. We could use DNS.
Dialogue: 0,0:02:21.28,0:02:26.22,Default,,0,0,0,,DNS系统的作用是将域名解析为IP地址\NSo, the DNS system is for resolving domain names to IP addresses.
Dialogue: 0,0:02:26.72,0:02:27.60,Default,,0,0,0,,我们可以发起个问询\NWe can query.
Dialogue: 0,0:02:27.60,0:02:29.70,Default,,0,0,0,,我们可以这样做\NSo, we can do something like this.
Dialogue: 0,0:02:30.86,0:02:34.10,Default,,0,0,0,,我这里问询的是计算机实验室网站的IP地址\NI'm going to query the computer lab website here.
Dialogue: 0,0:02:34.10,0:02:37.72,Default,,0,0,0,,DNS系统会返回给我此网站的IP地址\NAnd it's going to give me back the IP address of that website.
Dialogue: 0,0:02:37.72,0:02:40.24,Default,,0,0,0,,如果你仔细查看返回的结果\NAnd if you look at this answer here,
Dialogue: 0,0:02:40.24,0:02:42.54,Default,,0,0,0,,你可以看到 这里的第二列有一些数字\Nyou can see in the second column there are these numbers.
Dialogue: 0,0:02:42.54,0:02:47.60,Default,,0,0,0,,这些数字表示的是这些记录的存活时间 单位为秒\NAnd these numbers are the time to live in seconds of these records.
Dialogue: 0,0:02:47.60,0:02:49.62,Default,,0,0,0,,这里的意思是\NSo, what this means is that
Dialogue: 0,0:02:49.62,0:02:53.66,Default,,0,0,0,,系统允许你将DNS问询请求在特定的时间周期内缓存下来\Nyou're allowed to cache the results of this DNS query for a certain period of time.
Dialogue: 0,0:02:53.66,0:02:58.02,Default,,0,0,0,,这里的时间是七千多秒 也就是大约两个小时左右\NHere is seven thousand seconds. So, that's about two hours, or something like that.
Dialogue: 0,0:02:58.02,0:03:01.22,Default,,0,0,0,,系统允许将这些返回结果缓存下来\NAnd the results are allowed to be cached.
Dialogue: 0,0:03:01.60,0:03:06.08,Default,,0,0,0,,如果超过了这个限定时间 我们就需要刷新问询了\NBut then, after that time has elapsed, then we need to refresh the query.
Dialogue: 0,0:03:06.08,0:03:08.66,Default,,0,0,0,,我们需要重新执行问询 得到更新后的数据\NWe need to rerun the query in order to get fresh data
Dialogue: 0,0:03:08.66,0:03:11.08,Default,,0,0,0,,因此 如果某人希望更改DNS记录\Nso that if somebody wants to change the DNS record,
Dialogue: 0,0:03:11.08,0:03:13.76,Default,,0,0,0,,更改结果最终仍然可以传播到所有位置\Nthen it will eventually propagate to everywhere.
Dialogue: 0,0:03:13.76,0:03:17.42,Default,,0,0,0,,我可以在几秒钟之后的现在重新执行问询\NI can now actually rerun this a couple of seconds later,
Dialogue: 0,0:03:17.42,0:03:23.40,Default,,0,0,0,,大家可以看到 现在7338变成了7293\Nand see that now 7338 has gone down to 7293,
Dialogue: 0,0:03:23.42,0:03:27.60,Default,,0,0,0,,因为在我讲话的时候 时间也在流逝 剩余的缓存时间会减小\Nbecause that number of seconds has elapsed while I was talking right now.
Dialogue: 0,0:03:27.60,0:03:33.92,Default,,0,0,0,,另一个需要度量时间的有趣例子来自于网站\NAnother interesting example of where time measurements happen is on a website.
Dialogue: 0,0:03:33.92,0:03:36.82,Default,,0,0,0,,我这里有一个计算机实验室网站\NSo, let's say, here I have the computer lab website again.
Dialogue: 0,0:03:36.82,0:03:43.88,Default,,0,0,0,,我通过HTTPS协议连接此网站 这意味着网站要包含一个证书\NAnd I'm connected to it via HTTPS, which means that it has here a certificate,
Dialogue: 0,0:03:43.88,0:03:45.58,Default,,0,0,0,,也就是一个TLS证书\Nso, a TLS certificate,
Dialogue: 0,0:03:45.58,0:03:50.14,Default,,0,0,0,,与此证书相关的一个机制使我们可以验证我们访问的确实是正确的服务器\Nwhich is used as a mechanism to check that we're actually talking to the correct server,
Dialogue: 0,0:03:50.14,0:03:53.88,Default,,0,0,0,,而不是模仿此网站的一个假服务器\Nnot to some fake server that is trying to impersonate this website.
Dialogue: 0,0:03:53.88,0:03:55.36,Default,,0,0,0,,当我浏览此证书时\NAnd if I view the certificate,
Dialogue: 0,0:03:55.36,0:03:58.74,Default,,0,0,0,,可以看到 证书只有在一定时间周期内是有效的\Nwell, again, a certificate is valid only for a certain period of time.
Dialogue: 0,0:03:58.74,0:04:01.12,Default,,0,0,0,,证书包含一个到期时间\NSo, it has an expiry date here.
Dialogue: 0,0:04:01.12,0:04:04.98,Default,,0,0,0,,这个证书的到期时间为2020年11月2日\NSo, this certificate expires on the 2nd of November 2020.
Dialogue: 0,0:04:04.98,0:04:09.16,Default,,0,0,0,,我是在2020年9月录制的这个视频\NI'm recording this video here at the end of September 2020.
Dialogue: 0,0:04:09.16,0:04:11.58,Default,,0,0,0,,因此 当我在录制视频的时候\NSo, at the time when I'm speaking here,
Dialogue: 0,0:04:11.94,0:04:16.40,Default,,0,0,0,,此证书仅有大概1个月的时间就到期了\Nthe certificate has got just over a month still left before it expires.
Dialogue: 0,0:04:16.40,0:04:20.10,Default,,0,0,0,,网站的证书每过几个月都需要更新\NAnd so, it will get renewed from time to time every couple of months
Dialogue: 0,0:04:20.46,0:04:23.50,Default,,0,0,0,,确保证书是新鲜的\Nso that it keeps being fresh.
Dialogue: 0,0:04:24.02,0:04:29.22,Default,,0,0,0,,为了让我的计算机验证此证书的有效性\NBut here again, in order for my computer to check whether the certificate is valid,
Dialogue: 0,0:04:29.22,0:04:32.06,Default,,0,0,0,,我的计算机必须知道当前日期是什么\Nmy computer needs to know what the current date is,
Dialogue: 0,0:04:32.06,0:04:34.64,Default,,0,0,0,,否则 计算机无法得知\Nbecause otherwise, the computer won't be able to tell
Dialogue: 0,0:04:34.64,0:04:38.00,Default,,0,0,0,,当前日期是否处于证书的有效期之内\Nare we within the validity period of this certificate or not.
Dialogue: 0,0:04:38.00,0:04:41.38,Default,,0,0,0,,这就是另一个要用到时间的场景\NSo, that's another interesting use of time.
Dialogue: 0,0:04:41.38,0:04:44.34,Default,,0,0,0,,最后一个使用时间的场景是\NAnd then, finally, we use time measurements
Dialogue: 0,0:04:44.34,0:04:47.10,Default,,0,0,0,,我们需要使用时间度量机制来确定分布式系统中\Nin order to determine in a distributed system
Dialogue: 0,0:04:47.10,0:04:49.36,Default,,0,0,0,,特定事件发生的顺序\Nin which order certain events occurred.
Dialogue: 0,0:04:49.36,0:04:52.36,Default,,0,0,0,,我会在后面的课程中再详细讲解这个场景\NAnd I will talk about that more later in this lecture.
Dialogue: 0,0:04:52.36,0:04:56.70,Default,,0,0,0,,在分布式系统中 我们会遇到两类时钟\NSo, there are two types of clocks that we encounter in distributed systems.
Dialogue: 0,0:04:56.70,0:05:00.18,Default,,0,0,0,,我们分别把它们叫做物理时钟和逻辑时钟 以示区分\NAnd we distinguish them as called physical and logical clocks.
Dialogue: 0,0:05:00.18,0:05:04.76,Default,,0,0,0,,物理时钟是我们每天都在使用的时钟\NPhysical clocks are the type of clocks that you know from everyday usage.
Dialogue: 0,0:05:04.76,0:05:06.88,Default,,0,0,0,,物理时钟记录了流逝的秒数\NThey count the number of seconds that have elapsed.
Dialogue: 0,0:05:06.88,0:05:09.56,Default,,0,0,0,,物理时钟告诉我们今天的日期和今天的时间\NThey tell you what time of day it is and what date it is.
Dialogue: 0,0:05:09.56,0:05:12.80,Default,,0,0,0,,这也是我们本节课要讨论的时钟类型\NAnd that's the type of clock that we're talking about in this lecture.
Dialogue: 0,0:05:12.80,0:05:15.82,Default,,0,0,0,,我将在下一节课介绍逻辑时钟\NLogical clocks, I will come to in the next lecture.
Dialogue: 0,0:05:15.82,0:05:19.04,Default,,0,0,0,,我们在这里澄清一下术语\NNow, just a little terminology clarification,
Dialogue: 0,0:05:19.04,0:05:21.72,Default,,0,0,0,,数字电路中也会用到时钟这个术语\Nthe term clock is also used in digital electronics.
Dialogue: 0,0:05:21.72,0:05:23.20,Default,,0,0,0,,分布式系统中也会用到时钟\NAnd you've come across it there,
Dialogue: 0,0:05:23.64,0:05:24.40,Default,,0,0,0,,在数字电路中\Nwhere it means
Dialogue: 0,0:05:24.40,0:05:30.16,Default,,0,0,0,,时钟的意思是以特定频率生成0或者1脉冲的信号源\Na signal which produces pulses of ones and zeros at a certain regular frequency.
Dialogue: 0,0:05:30.96,0:05:34.70,Default,,0,0,0,,在分布式系统中 时钟这个词的含义有所不同\NIn distributed systems, we use the word clock in a slightly different way.
Dialogue: 0,0:05:34.70,0:05:36.92,Default,,0,0,0,,在分布式系统中\NSo, the meaning in distributed systems is
Dialogue: 0,0:05:36.92,0:05:39.82,Default,,0,0,0,,时钟的意思是 你可以从时钟获得一个时间戳\Na clock is something that you can ask for a timestamp.
Dialogue: 0,0:05:39.82,0:05:42.50,Default,,0,0,0,,时钟告诉你当前的时间\NSo, it tells you what the current time is.
Dialogue: 0,0:05:42.50,0:05:45.12,Default,,0,0,0,,当前时间由时间戳表示\NAnd the current time is represented as a timestamp,
Dialogue: 0,0:05:45.12,0:05:47.92,Default,,0,0,0,,这个时间戳描述了当前日期和时间\Nwhich might be the current date and time.
Dialogue: 0,0:05:47.92,0:05:56.40,Default,,0,0,0,,现在 大多数计算机使用石英晶体来实现时钟\NSo, the way that most computers implement clocks nowadays is using quartz crystals.
Dialogue: 0,0:05:56.40,0:05:59.04,Default,,0,0,0,,幻灯片上的图片就是一块石英\NSo, this is literally a piece of quartz,
Dialogue: 0,0:05:59.24,0:06:02.98,Default,,0,0,0,,一般来说 我们用的不是自然界的石英 而是人工生长的石英\Ntypically not a natural quartz crystal, but an artificially grown one,
Dialogue: 0,0:06:02.98,0:06:04.70,Default,,0,0,0,,但它仍然是二氧化硅\Nbut it's still silicon dioxide.
Dialogue: 0,0:06:04.70,0:06:08.66,Default,,0,0,0,,用激光可以将石英切割成特定的形状和大小\NAnd it's cut to a certain size and into a certain shape using lasers.
Dialogue: 0,0:06:08.66,0:06:11.08,Default,,0,0,0,,石英会发生机械振动\NAnd it then mechanically vibrates.
Dialogue: 0,0:06:11.08,0:06:13.94,Default,,0,0,0,,石英会以特定的频率谐振\NSo, it mechanically resonates at a certain frequency.
Dialogue: 0,0:06:13.94,0:06:15.34,Default,,0,0,0,,可以通过激光的切割情况\NAnd the frequency at which it resonates
Dialogue: 0,0:06:15.34,0:06:19.54,Default,,0,0,0,,来调节石英的谐振频率\Ncan be tuned by cutting off bits of the crystal using lasers.
Dialogue: 0,0:06:19.54,0:06:25.36,Default,,0,0,0,,石英也是一个压电材料 具体来说\NNow, quartz is also a piezoelectric material, which means that
Dialogue: 0,0:06:25.36,0:06:30.26,Default,,0,0,0,,如果你在石英上施加电场 则石英会发生机械应变\Nif you apply an electric field to it, it induces a mechanical strain in the material.
Dialogue: 0,0:06:30.26,0:06:36.58,Default,,0,0,0,,如果你在石英上施加一个力 则石英会创建电场\NAnd also, the other way, if you apply a force to it, then it creates an electric field.
Dialogue: 0,0:06:36.58,0:06:42.98,Default,,0,0,0,,因此 你可以应用石英的力学运动和电场交互机制\NAnd so, you can use this interplay between the mechanical motion and the electric field
Dialogue: 0,0:06:42.98,0:06:49.04,Default,,0,0,0,,创建出一个非常精准的振荡器 使其以非常精准的频率谐振\Nin order to create a fairly accurate oscillator that resonates at a fairly accurate frequency.
Dialogue: 0,0:06:49.42,0:06:52.56,Default,,0,0,0,,也就是说 石英晶体周围存在一个很弱的电场\NSo, there's a little bit of electronics around the quartz crystal,
Dialogue: 0,0:06:52.56,0:06:57.60,Default,,0,0,0,,石英会按照固定的频率生成一个信号\Nbut essentially, it produces a signal with a certain fixed frequency.
Dialogue: 0,0:06:57.60,0:07:03.66,Default,,0,0,0,,石英生成的信号频率是高度可预测的 这使得石英钟非常精准\NNow, this frequency is quite predictable, and this makes quartz clocks quite accurate,
Dialogue: 0,0:07:03.66,0:07:05.32,Default,,0,0,0,,但石英钟并不是完美的\Nbut it is certainly not perfect,
Dialogue: 0,0:07:05.32,0:07:08.26,Default,,0,0,0,,因为不同石英的切割结果\Nbecause there are always going to be certain manufacturing differences
Dialogue: 0,0:07:08.26,0:07:10.48,Default,,0,0,0,,总会有微小的差别\Nbetween one crystal and another.
Dialogue: 0,0:07:10.48,0:07:13.50,Default,,0,0,0,,石英的振动频率无法做到严格一致\NThey won't oscillate at precisely the same frequency.
Dialogue: 0,0:07:13.50,0:07:15.12,Default,,0,0,0,,振动频率总会出现一点错误\NThere will be a little bit of an error.
Dialogue: 0,0:07:15.12,0:07:18.00,Default,,0,0,0,,进一步 石英晶体的谐振频率\NMoreover, the resonant frequency of a quartz crystal
Dialogue: 0,0:07:18.00,0:07:20.28,Default,,0,0,0,,与温度强相关\Nactually depends on the temperature.
Dialogue: 0,0:07:20.28,0:07:26.42,Default,,0,0,0,,用于石英振荡器的晶体已经经过了调谐\NAnd so, the crystals that are used for quartz oscillators are tuned.
Dialogue: 0,0:07:26.42,0:07:29.30,Default,,0,0,0,,选择和构建石英振荡器的原则是\NAnd they're selected and created in such a way that
Dialogue: 0,0:07:29.30,0:07:35.40,Default,,0,0,0,,室内温度在20℃至25℃时 石英振荡器的谐振频率非常稳定\Ntheir frequency is quite stable around room temperature, around 20 to 25℃.
Dialogue: 0,0:07:35.96,0:07:39.28,Default,,0,0,0,,但当温度不在这个范围内时\NBut as you deviate from this temperature significantly,
Dialogue: 0,0:07:39.28,0:07:42.66,Default,,0,0,0,,时钟速度的下降频率与温度成平方级关系\Nthere's actually a quadratic decrease in the clock speed.
Dialogue: 0,0:07:42.66,0:07:47.24,Default,,0,0,0,,举例来说 如果你身处一个非常热的服务器机房中\NAnd so, if you're in a very hot server room, for example,
Dialogue: 0,0:07:47.60,0:07:50.44,Default,,0,0,0,,服务器机房的温度可能会非常高\Nwhere you might reach significantly higher temperatures
Dialogue: 0,0:07:50.44,0:07:52.34,Default,,0,0,0,,远高于正常的室温\Nthan your typical room temperature,
Dialogue: 0,0:07:52.34,0:07:56.38,Default,,0,0,0,,高室温会对服务器的时钟频率\Nthen this actually can have a significant impact on the frequency
Dialogue: 0,0:07:56.38,0:07:58.62,Default,,0,0,0,,造成很大的影响\Nat which the clock is running.
Dialogue: 0,0:07:58.62,0:08:02.14,Default,,0,0,0,,一般使用兆分比（ppm）来度量时钟速度\NSo, the clock speed is measured in parts per million usually.
Dialogue: 0,0:08:02.14,0:08:06.14,Default,,0,0,0,,这与百分比很像 但我们除以的不是100 而是100万\NThis is just like percent, but rather than dividing by 100, we divide by a million.
Dialogue: 0,0:08:06.14,0:08:10.66,Default,,0,0,0,,你可以这么理解 如果时钟有1ppm的速度误差\NAnd so, you can work out like if you have 1ppm error that would mean that
Dialogue: 0,0:08:10.66,0:08:14.26,Default,,0,0,0,,则时钟每年的偏移量约为32秒\Nthe clock goes wrong by about 32 seconds per year.
Dialogue: 0,0:08:14.62,0:08:20.18,Default,,0,0,0,,大多数石英钟大约有20ppm左右的速度误差\NNow, most quartz clocks will be like maybe 20ppm or something like that,
Dialogue: 0,0:08:20.18,0:08:23.04,Default,,0,0,0,,当然了 这只是个大概量级 具体误差取决于温度\Norder of magnitude, of course, depending on the temperature.
Dialogue: 0,0:08:23.58,0:08:28.78,Default,,0,0,0,,一般来说 绝大多数时钟的速度误差小于50ppm\NAs a rule of thumb, probably most clock errors will be below 50ppm.
Dialogue: 0,0:08:29.50,0:08:34.06,Default,,0,0,0,,如果你觉得石英钟的准确率不足 你可以使用原子钟\NNow, if that is not accurate enough for you, you can use an atomic clock.
Dialogue: 0,0:08:34.06,0:08:36.92,Default,,0,0,0,,原子钟要精准得多得多得多\NAtomic clocks are much much much more accurate.
Dialogue: 0,0:08:36.92,0:08:40.12,Default,,0,0,0,,原子钟是一个基于量子力学效应的时钟\NAnd they are based on quantum mechanical effects.
Dialogue: 0,0:08:40.12,0:08:44.66,Default,,0,0,0,,它们是用特定铯同位素的铯原子来构建的\NSo, they actually use cesium atoms of a certain isotope of cesium.
Dialogue: 0,0:08:44.66,0:08:50.58,Default,,0,0,0,,如果你了解量子力学的话 原子都有其对应的离散能级\NAnd if you remember any quantum mechanics, atoms have discrete energy levels.
Dialogue: 0,0:08:50.58,0:08:53.06,Default,,0,0,0,,不同原子的能级\NThe difference between those energy levels
Dialogue: 0,0:08:53.06,0:08:56.34,Default,,0,0,0,,由原子的特定谐振频率所决定\Ncorresponds to certain resonant frequencies of the atom.
Dialogue: 0,0:08:56.34,0:09:01.98,Default,,0,0,0,,特定铯同位素的能级跃迁非常容易度量\NAnd there's one particular energy transition, which is at a fairly friendly to measure,
Dialogue: 0,0:09:01.98,0:09:04.02,Default,,0,0,0,,频率大约为9GHz\Nfrequency of about 9GHz.
Dialogue: 0,0:09:04.02,0:09:07.12,Default,,0,0,0,,也就是说 每秒能观察到大约9G次能级跃迁\NSo, you get about 9G oscillations of this per second.
Dialogue: 0,0:09:07.12,0:09:10.00,Default,,0,0,0,,这就是人类定义秒的方法\NAnd this is actually how the second is now defined.
Dialogue: 0,0:09:10.00,0:09:13.50,Default,,0,0,0,,标准国际单位中 1秒的准确定义是\NSo, the SI unit of one second is defined to be
Dialogue: 0,0:09:13.50,0:09:21.10,Default,,0,0,0,,此特定铯同位素原子谐振时所产生信号的\Nexactly 9,192,631,770 periods of this particular signal
Dialogue: 0,0:09:21.10,0:09:26.10,Default,,0,0,0,,9,192,631,770个周期时间\Ngenerated from this particular resonant frequency of cesium atoms.
Dialogue: 0,0:09:26.10,0:09:28.44,Default,,0,0,0,,这个时钟是非常精准的\NNow, this is incredibly precise.
Dialogue: 0,0:09:28.94,0:09:30.34,Default,,0,0,0,,当然了 这个时钟也没那么便宜\NOf course, the clocks are not that cheap.
Dialogue: 0,0:09:30.34,0:09:33.60,Default,,0,0,0,,如果你有钱的话 可以买一个这样的成品时钟\NBut you can just buy a clock off-the-shelf if you have the money.
Dialogue: 0,0:09:33.98,0:09:35.96,Default,,0,0,0,,我不是很确定这样的时钟有多贵\NI'm not entirely sure exactly how much they cost,
Dialogue: 0,0:09:35.96,0:09:40.28,Default,,0,0,0,,这是我竭尽所能 在网上找到的估计价格了\Nbut these were sort of the best estimates I was able to get off the Internet.
Dialogue: 0,0:09:40.28,0:09:45.20,Default,,0,0,0,,如果你有一个原子钟 你就可以完成一些很有趣的事情\NAnd well, if you have an atomic clock, you can do some interesting things with it.
Dialogue: 0,0:09:45.20,0:09:47.76,Default,,0,0,0,,例如 你可以构造一个GPS\NLike you can build GPS, for example.
Dialogue: 0,0:09:47.76,0:09:53.08,Default,,0,0,0,,如果你希望得到一个非常精准的时钟信号\NSo, if you want a very precise clock signal,
Dialogue: 0,0:09:53.08,0:09:55.78,Default,,0,0,0,,得到此时钟的一个方法就是使用GPS\None way of getting that clock is actually to use GPS,
Dialogue: 0,0:09:55.78,0:09:58.24,Default,,0,0,0,,这就是你的智能手机定位时所使用的系统\Nso, the same system that you use on your smartphone
Dialogue: 0,0:09:58.24,0:10:00.64,Default,,0,0,0,,智能手机使用此系统告诉你身处的位置\Nto tell you where you are right now on a map,
Dialogue: 0,0:10:00.64,0:10:03.78,Default,,0,0,0,,此系统由绕地球飞行的一系列卫星所组成\NIt works by having a bunch of satellites that orbit the earth,
Dialogue: 0,0:10:03.78,0:10:06.50,Default,,0,0,0,,每个卫星都携带了一个原子钟\Nand each satellite carries an atomic lock
Dialogue: 0,0:10:06.50,0:10:12.28,Default,,0,0,0,,每个卫星都周期性地对外广播当前时钟和当前位置\Nthat broadcasts its current clock and its current location periodically.
Dialogue: 0,0:10:12.28,0:10:17.50,Default,,0,0,0,,GPS接收器将接收一部分卫星的信号\NAnd so, the GPS receiver, it receives the signals from several of these satellites.
Dialogue: 0,0:10:17.50,0:10:22.56,Default,,0,0,0,,并计算各个卫星信号的时间差\NIt calculates the time difference between when the signal was sent by the satellite.
Dialogue: 0,0:10:22.56,0:10:25.58,Default,,0,0,0,,当你的手机收到信号时\NAnd when the signal was received by your phone,
Dialogue: 0,0:10:25.58,0:10:28.76,Default,,0,0,0,,手机可以根据时间差和光速\Nand from the time distance and the speed of light,
Dialogue: 0,0:10:28.76,0:10:32.26,Default,,0,0,0,,计算出你和卫星在空间中的相对距离\Nit can work out the actual distance in space between you and the satellite,
Dialogue: 0,0:10:32.26,0:10:34.40,Default,,0,0,0,,从而计算出你所在的位置\Nand from that it can work out where you are.
Dialogue: 0,0:10:34.40,0:10:37.64,Default,,0,0,0,,如果想让位置的计算结果更准确 还有大量的细节问题需要处理\NNow, there's a lot of details that go into making this accurate.
Dialogue: 0,0:10:37.64,0:10:43.78,Default,,0,0,0,,对于我们来说 现在最感兴趣的是时间 而不是位置\NBut for our purposes, well, all we're actually interested in right now is time, not location.
Dialogue: 0,0:10:43.78,0:10:50.26,Default,,0,0,0,,你可以把GPS卫星作为一个非常精准的时钟信号源\NAnd you can use GPS satellites as a very accurate way of getting time and clocks.
Dialogue: 0,0:10:50.26,0:10:54.46,Default,,0,0,0,,为使用这个时钟信号源 你需要能从卫星中提取出信号\NNow, this does rely on being able to actually pick up the signal from the satellite.
Dialogue: 0,0:10:54.46,0:10:55.66,Default,,0,0,0,,如果你身处数据中心\NSo, if you're in a data center
Dialogue: 0,0:10:55.66,0:10:58.68,Default,,0,0,0,,数据中心可能有太多的屏蔽障碍和电磁干扰\Nthere's probably so much shielding and electromagnetic interference
Dialogue: 0,0:10:58.68,0:11:00.18,Default,,0,0,0,,使得你无法得到GPS信号\Nthat you can't actually pick up the signal,
Dialogue: 0,0:11:00.18,0:11:03.24,Default,,0,0,0,,此时 你不得不在数据中心的屋顶上放一个天线 用于接收信号了\Nso, you have to put an antenna on the roof of the data center.
Dialogue: 0,0:11:03.24,0:11:08.06,Default,,0,0,0,,这实际上就是人们获得准确时钟的方法\NBut this is something that people actually do as a way of getting accurate clocks.
Dialogue: 0,0:11:08.06,0:11:10.12,Default,,0,0,0,,我们已经花了很长时间介绍时钟的工作原理了\NSo, so much about how clocks actually work.
Dialogue: 0,0:11:10.12,0:11:12.74,Default,,0,0,0,,如何定义时间呢？\NNow, how is time defined?
Dialogue: 0,0:11:12.74,0:11:18.92,Default,,0,0,0,,你可能会遇到过UTC这个术语 UTC指的是协调世界时\NSo, you might have come across the term UTC, Coordinated Universal Time,
Dialogue: 0,0:11:18.92,0:11:24.70,Default,,0,0,0,,这是我们所处的所有时区都在使用的参考时间\Nwhich is the reference time that is used for all of our time zones, we use nowadays.
Dialogue: 0,0:11:25.46,0:11:29.14,Default,,0,0,0,,UTC是如何定义的呢？我们来精确定义一下UTC\NHow is UTC actually defined? We have to be precise about this.
Dialogue: 0,0:11:29.14,0:11:33.20,Default,,0,0,0,,你可能还遇到过GMT这个术语 即格林威治标准时间\NAnd so, you've probably come across the term GMT, Greenwich Mean Time,
Dialogue: 0,0:11:33.20,0:11:36.52,Default,,0,0,0,,不幸的是 格林威治标准时间的定义随时间发生了改变\Nwhich unfortunately the meaning of that has changed over time.
Dialogue: 0,0:11:36.52,0:11:40.96,Default,,0,0,0,,此时间最初是基于天文学观测结果来定义的\NIts original meaning was time based on astronomical observations.
Dialogue: 0,0:11:40.96,0:11:45.68,Default,,0,0,0,,最初的定义是\NSo, it was literally when is the sun in the south
Dialogue: 0,0:11:45.68,0:11:48.56,Default,,0,0,0,,当你在格林威治天文台观察太阳时 太阳什么时候位于正南方向\Nif you are looking at the sun from the Greenwich observatory.
Dialogue: 0,0:11:48.56,0:11:51.82,Default,,0,0,0,,你可以前往位于伦敦东南的格林威治镇\NSo, you can literally go to Greenwich in southeast London,
Dialogue: 0,0:11:51.82,0:11:53.24,Default,,0,0,0,,访问那里的天文台\Nand visit the observatory there,
Dialogue: 0,0:11:53.24,0:11:56.44,Default,,0,0,0,,看看那里划定的子午线\Nand see the meridian at which it was defined that
Dialogue: 0,0:11:56.44,0:12:01.16,Default,,0,0,0,,当在这个特定的地点看到太阳落在子午线时 意味着此时是中午12点\Nwhen the sun is in the south as seen from this particular place, then it is noon.
Dialogue: 0,0:12:01.78,0:12:05.08,Default,,0,0,0,,一年中的时间会有一些微小的变化\NNow, the time varies a little bit over the course of the year,
Dialogue: 0,0:12:05.08,0:12:08.56,Default,,0,0,0,,我们会平均化掉这些微小的变化\Nso that way, we actually average this over the course of the year.
Dialogue: 0,0:12:09.22,0:12:10.40,Default,,0,0,0,,但基本思想就是这样\NBut the idea is still this.
Dialogue: 0,0:12:10.40,0:12:13.68,Default,,0,0,0,,格林威治标准时间是基于天文学观测结果来定义的\NIt is time based on astronomical observations.
Dialogue: 0,0:12:13.68,0:12:15.82,Default,,0,0,0,,我前面介绍了原子钟\NNow, I just said atomic clocks.
Dialogue: 0,0:12:15.82,0:12:20.10,Default,,0,0,0,,原子钟使用铯原子定义时间 使用量子力学定义时间\NThey define time using cesium atoms, so using quantum mechanics.
Dialogue: 0,0:12:20.10,0:12:25.56,Default,,0,0,0,,国际原子时间的定义方法如下\NAnd so, this is now actually how time is defined, the International Atomic Time is.
Dialogue: 0,0:12:25.56,0:12:26.70,Default,,0,0,0,,取数个原子钟\NLet's take atomic clocks.
Dialogue: 0,0:12:26.70,0:12:30.52,Default,,0,0,0,,取分布在全世界的数百个原子钟\NWe take a couple of hundred atomic clocks spread around the world.
Dialogue: 0,0:12:30.92,0:12:32.14,Default,,0,0,0,,我们同步这些原子钟\NWe synchronize those.
Dialogue: 0,0:12:32.14,0:12:35.00,Default,,0,0,0,,我们基于铯原子的谐振频率\NAnd we count exactly the number of oscillations we have
Dialogue: 0,0:12:35.00,0:12:37.70,Default,,0,0,0,,准确记录振动次数\Nfrom this cesium resonant frequency.
Dialogue: 0,0:12:37.70,0:12:40.16,Default,,0,0,0,,振动次数告诉了我们流逝的秒数\NAnd that tells us how many seconds have elapsed.
Dialogue: 0,0:12:40.16,0:12:43.82,Default,,0,0,0,,不幸的是 这两种时间定义无法做到完全匹配\NNow, these two things don't unfortunately match up exactly.
Dialogue: 0,0:12:43.82,0:12:46.12,Default,,0,0,0,,我们有两种不同的时间定义\NSo, we have two different definitions of time,
Dialogue: 0,0:12:46.12,0:12:49.38,Default,,0,0,0,,一个基于天文学 一个基于量子力学\None based on astronomy, the other based on quantum mechanics.
Dialogue: 0,0:12:49.38,0:12:52.30,Default,,0,0,0,,这两个时间定义不能完全匹配\NAnd these two things don't exactly match up.
Dialogue: 0,0:12:52.30,0:12:53.72,Default,,0,0,0,,这两个时间定义非常接近\NThey're pretty close,
Dialogue: 0,0:12:53.72,0:12:58.54,Default,,0,0,0,,但基于天文学的时间定义会存在一些问题\Nbut especially the observations based on astronomy are problematic,
Dialogue: 0,0:12:58.54,0:13:01.88,Default,,0,0,0,,因为地球自转频率并不是一个常数\Nbecause the speed of the rotation is not actually entirely constant,
Dialogue: 0,0:13:01.88,0:13:04.08,Default,,0,0,0,,地球自转会发生一些摇摆\Njust actually the earth wobbles a little bit,
Dialogue: 0,0:13:04.08,0:13:07.58,Default,,0,0,0,,地球有时会转的快一些 有时会转的慢一些\Nand sometimes it turns a little bit faster, and sometimes it turns a little bit slower.
Dialogue: 0,0:13:07.58,0:13:10.52,Default,,0,0,0,,自转速度受地震、潮汐等影响\NAnd this is affected by earthquakes, and by tides,
Dialogue: 0,0:13:10.52,0:13:13.06,Default,,0,0,0,,也会受很多非常奇怪的因素所影响\Nand by all sorts of weird complicated effects.
Dialogue: 0,0:13:13.06,0:13:16.84,Default,,0,0,0,,现在的问题是 我们希望使用原子时间\NAnd so, the result is that, well, we want to use atomic time,
Dialogue: 0,0:13:16.84,0:13:20.30,Default,,0,0,0,,因为原子时间比不稳定的地球时间要精准得多\Nbecause that's much more precise than this wobbly earth time.
Dialogue: 0,0:13:20.30,0:13:23.82,Default,,0,0,0,,与此同时 我们又希望原子时间\NBut at the same time, we want our time to be consistent with
Dialogue: 0,0:13:23.82,0:13:26.28,Default,,0,0,0,,与地球的自转周期相匹配\Nhow the earth rotates around its axis.
Dialogue: 0,0:13:26.28,0:13:29.88,Default,,0,0,0,,妥协结果就是UTC时间\NAnd so, the compromise is UTC.
Dialogue: 0,0:13:29.88,0:13:33.84,Default,,0,0,0,,妥协的方法是 我们取国际原子时间\NThe compromise is we take atomic time, International Atomic Time,
Dialogue: 0,0:13:33.84,0:13:37.20,Default,,0,0,0,,基于天文学对原子时间做一些修正\Nand we apply some corrections to it based on astronomy.
Dialogue: 0,0:13:37.20,0:13:41.44,Default,,0,0,0,,这样得到的时间既能基于量子力学\NAnd that will give us a time that is founded on quantum mechanics,
Dialogue: 0,0:13:41.44,0:13:44.56,Default,,0,0,0,,又能与天文学观察结果保持一致\Nbut still consistent with astronomical observations.
Dialogue: 0,0:13:44.56,0:13:48.42,Default,,0,0,0,,讲起来有点复杂 但结论是我们得到了一个满足要求的时间\NIt's a bit of a complication, but that's what we've ended up with.
Dialogue: 0,0:13:48.42,0:13:50.68,Default,,0,0,0,,这就是UTC时间的定义\NAnd so, this is how UTC is defined,
Dialogue: 0,0:13:50.68,0:13:55.22,Default,,0,0,0,,时区、夏令时、冬令时等\Nand time zones, and like summer time, winter time,
Dialogue: 0,0:13:55.22,0:13:57.80,Default,,0,0,0,,都是根据UTC的偏移情况来定义的\Nall of these are defined as offsets to UTC now.
Dialogue: 0,0:13:57.80,0:14:01.46,Default,,0,0,0,,举例来说 如果你在美国的东海岸\NAnd so, like if you're on the east coast U.S., for example,
Dialogue: 0,0:14:01.46,0:14:04.88,Default,,0,0,0,,则你的时间为UTC +5\Nyou'll be in like UTC +5, for example.
Dialogue: 0,0:14:04.88,0:14:10.42,Default,,0,0,0,,修正原子时间得到UTC时间的具体方法是什么呢？\NNow, how does this correction from atomic time to UTC look like?
Dialogue: 0,0:14:10.42,0:14:14.06,Default,,0,0,0,,答案是使用闰秒来完成修正\NThe answer is the correction takes the form of leap seconds.
Dialogue: 0,0:14:14.06,0:14:18.28,Default,,0,0,0,,大家可能都听说过闰年 闰年的概念众所周知\NSo, you've all heard of leap years before. Leap years are very familiar thing.
Dialogue: 0,0:14:18.28,0:14:23.54,Default,,0,0,0,,闰秒也是一个有点奇怪的概念 可能比闰年更奇怪一些\NThis is a different concept, but it's similarly weird. It's even more weird actually.
Dialogue: 0,0:14:23.54,0:14:27.02,Default,,0,0,0,,闰秒是可以在特定日期内\NAnd so, a leap second is an extra second
Dialogue: 0,0:14:27.02,0:14:30.72,Default,,0,0,0,,插入或移除的额外一秒钟\Nthat can be either inserted or removed on a certain date.
Dialogue: 0,0:14:30.72,0:14:33.90,Default,,0,0,0,,每年可以在两个日期内出现闰秒\NAnd so, every year there are typically two dates
Dialogue: 0,0:14:33.90,0:14:36.40,Default,,0,0,0,,当然也可能不出现闰秒\Non which a leap second may or may not happen.
Dialogue: 0,0:14:36.40,0:14:39.42,Default,,0,0,0,,这两个日期分别为6月30日和12月31日\NAnd that is the 30th of June and the 31st of December.
Dialogue: 0,0:14:39.42,0:14:41.72,Default,,0,0,0,,原则上说 每月的最后一天都可以引入闰秒\NIn principle, I think it can happen at the end of every month,
Dialogue: 0,0:14:41.72,0:14:44.24,Default,,0,0,0,,但我们一般会使用6月和12月的最后一天引入闰秒\Nbut these are the two months that are typically used.
Dialogue: 0,0:14:44.24,0:14:46.46,Default,,0,0,0,,在这两天前的几个月\NAnd at that point,
Dialogue: 0,0:14:47.06,0:14:51.02,Default,,0,0,0,,天文学家会决定是否引入闰秒\Na few months before the leap second may or may not happen, astronomers decide,
Dialogue: 0,0:14:51.02,0:14:54.32,Default,,0,0,0,,天文学家会观察过去几个月地球的自转速度\NOK, how fast has the earth been rotating for the last couple of months,
Dialogue: 0,0:14:54.32,0:14:56.86,Default,,0,0,0,,决定是否插入闰秒\NOK, do we need to insert a second or not
Dialogue: 0,0:14:56.86,0:15:01.58,Default,,0,0,0,,使UTC时间与地球自转情况保持一致\Nto keep the UTC greatly consistent with the rotation of the earth.
Dialogue: 0,0:15:01.58,0:15:03.78,Default,,0,0,0,,根据天文学家的判定结果\NAnd so, depending on what the astronomers decide,
Dialogue: 0,0:15:03.78,0:15:07.32,Default,,0,0,0,,时钟可能会引入闰秒\Nthen the clock may or may not have an extra second.
Dialogue: 0,0:15:07.32,0:15:09.50,Default,,0,0,0,,这实际上意味着\NAnd so, this means actually that
Dialogue: 0,0:15:09.96,0:15:15.78,Default,,0,0,0,,如果需要减去1秒 这一天就没有第23小时59分59秒了\Nso, if there's a second subtracted, then there is no 23:59:59 second.
Dialogue: 0,0:15:15.78,0:15:21.10,Default,,0,0,0,,时钟走到58秒 随后在下一秒直接跳转到0秒\NThe clock goes 58, and then immediately jumps to 0 after one second.
Dialogue: 0,0:15:21.10,0:15:23.34,Default,,0,0,0,,也就是说 我们直接跳过了第59秒\NSo, the 59 second is simply skipped.
Dialogue: 0,0:15:23.34,0:15:25.38,Default,,0,0,0,,我们也可能让时钟正常运转\NOr, we could have a regular second.
Dialogue: 0,0:15:25.38,0:15:27.02,Default,,0,0,0,,我们也可能需要增加1秒\NOr, we can have an additional second,
Dialogue: 0,0:15:27.02,0:15:34.14,Default,,0,0,0,,此时 时钟会从59分59秒跳转到60秒 也就是说 过了2秒再跳转到0\Nin which the clock goes from 59:59 to 60, and then to 0 after two seconds.
Dialogue: 0,0:15:34.60,0:15:39.46,Default,,0,0,0,,我们在23分59秒后再插入额外的第60秒\NSo, we've inserted an extra second at 23:59 and 60.
Dialogue: 0,0:15:39.46,0:15:43.70,Default,,0,0,0,,这听起来很复杂 确实也有点复杂\NNow, this sounds complicated, and it is.
Dialogue: 0,0:15:43.70,0:15:48.08,Default,,0,0,0,,不幸的是 计算机不善于处理这种情况\NAnd unfortunately, computers are not very good at dealing with this.
Dialogue: 0,0:15:48.08,0:15:51.06,Default,,0,0,0,,计算机程序\NSo, there are two typical representations of time
Dialogue: 0,0:15:51.06,0:15:53.58,Default,,0,0,0,,一般使用两种时间表示方法\Nthat are most commonly used in computer programs.
Dialogue: 0,0:15:53.58,0:15:57.58,Default,,0,0,0,,第一种方法叫UNIX时间 此时间用一个整数表示\NFirstly, UNIX time, which is simply a number an integer
Dialogue: 0,0:15:57.58,0:16:01.28,Default,,0,0,0,,此整数的意思是从某一时刻开始到当前所经过的总秒数\Nthat counts the number of seconds since an arbitrary point in time.
Dialogue: 0,0:16:01.28,0:16:07.54,Default,,0,0,0,,1970年1月1日表示第0秒 这是任意选取的一个时间 也称为UNIX纪元\NThe 1st of January 1970 was arbitrarily picked, as this is called the UNIX epoch.
Dialogue: 0,0:16:07.54,0:16:12.06,Default,,0,0,0,,我们记录除了第0秒外 此时刻到当前已经经过的秒数\NAnd we count the number of seconds except that Unix time.
Dialogue: 0,0:16:12.06,0:16:14.76,Default,,0,0,0,,此时间定义不考虑闰秒\NIt is defined as not counting the leap seconds,
Dialogue: 0,0:16:14.76,0:16:17.92,Default,,0,0,0,,实际上 此时间定义标准根本没有提到过闰秒\Nor rather the standard simply doesn't say anything about leap seconds.
Dialogue: 0,0:16:17.92,0:16:22.96,Default,,0,0,0,,这么做的意思是：我可不管有谁愿意关心闰秒 反正我不关心\NIt's simply implied that, well, I don't know who cares about leap seconds whatever.
Dialogue: 0,0:16:23.74,0:16:25.50,Default,,0,0,0,,但是 人们觉得这个时间是根据UTC定义的\NBut it is defined in terms of UTC.
Dialogue: 0,0:16:25.50,0:16:26.58,Default,,0,0,0,,此定义不完全是UTC\NSo, it's not actually UTC.
Dialogue: 0,0:16:26.58,0:16:29.84,Default,,0,0,0,,此定义描述的是国际原子时间 而不是UTC时间\NIt's kind of an international atomic time actually rather than UTC.
Dialogue: 0,0:16:29.84,0:16:31.40,Default,,0,0,0,,但是所有人都说这是UTC时间\NBut everyone says it's UTC.
Dialogue: 0,0:16:31.40,0:16:33.30,Default,,0,0,0,,我也不知道为什么\NSo, what is this thing?
Dialogue: 0,0:16:33.30,0:16:39.26,Default,,0,0,0,,还有另一种日期和时间表示格式 称为ISO 8601\NAlso then, there's this other format of representing dates and times, which is ISO 8601,
Dialogue: 0,0:16:39.26,0:16:42.26,Default,,0,0,0,,这是基于年、月、日、时、分、秒定义的时间\Nwhich is based on year, month, day, hour, minute, and second.
Dialogue: 0,0:16:42.26,0:16:45.52,Default,,0,0,0,,这个定义也很实用 因为人类很容易理解这个定义\NThis is convenient because it's easy for humans to read.
Dialogue: 0,0:16:46.32,0:16:49.70,Default,,0,0,0,,但这也意味着我们需要在这两种格式之间进行转换\NBut now, it means we have to convert between these two representations.
Dialogue: 0,0:16:49.70,0:16:53.84,Default,,0,0,0,,转换时 你需要先知道日历\NAnd so, conversion firstly needs you to know the calendar.
Dialogue: 0,0:16:53.84,0:16:56.90,Default,,0,0,0,,我们很熟悉公历的定义\NSo, OK, we know how the Gregorian calendar works.
Dialogue: 0,0:16:56.90,0:17:02.14,Default,,0,0,0,,每年有365天 闰年会额外多出2月29日\NWe have 365 days in a year except we add an extra 29th of February in leap years.
Dialogue: 0,0:17:02.14,0:17:05.36,Default,,0,0,0,,如果当前年份可以被4整除\NIf the year is divisible by 4,
Dialogue: 0,0:17:05.36,0:17:08.22,Default,,0,0,0,,又不能被100整除\Nbut not if the year is divisible by 100,
Dialogue: 0,0:17:08.22,0:17:10.08,Default,,0,0,0,,又能被400整除\Nbut if the year is divisible by 400,
Dialogue: 0,0:17:10.08,0:17:12.34,Default,,0,0,0,,我们就需要在此年份增加一个闰日\Nthen we do add a leap day after all.
Dialogue: 0,0:17:12.34,0:17:14.68,Default,,0,0,0,,这就是闰年的处理方法\NOK, fine. So, that's our leap years.
Dialogue: 0,0:17:14.68,0:17:17.32,Default,,0,0,0,,然而 为了实现准确的格式转换\NBut then, actually in order to correctly convert these formats,
Dialogue: 0,0:17:17.32,0:17:21.22,Default,,0,0,0,,我们还应该考虑闰秒 因为闰秒会影响\Nwe should also take leap seconds into account, because they also determine
Dialogue: 0,0:17:21.22,0:17:25.28,Default,,0,0,0,,从1970年1月1日所流逝的秒数\Nthe number of seconds that have elapsed since the 1st of January 1970,
Dialogue: 0,0:17:25.28,0:17:30.54,Default,,0,0,0,,我记得从那天开始到现在 差不多引入了20个闰秒\Nbecause they've been, I think, over 20 leap seconds inserted since that point.
Dialogue: 0,0:17:30.54,0:17:36.74,Default,,0,0,0,,你觉得软件会如何处理闰秒呢？\NWell, how do you think software deals with these problems of leap seconds?
Dialogue: 0,0:17:36.74,0:17:40.94,Default,,0,0,0,,你猜对了 软件直接忽略闰秒 软件说\NYou guessed it. Software ignores it. Software goes
Dialogue: 0,0:17:40.94,0:17:43.20,Default,,0,0,0,,“啦啦啦啦啦 根本没有闰秒”\N“La, la, la, la, la, there are no leap seconds”.
Dialogue: 0,0:17:43.20,0:17:46.60,Default,,0,0,0,,“我才不关心呢 我希望这个问题根本不存在”\N“I don't care, and just hopes that the problem goes away”.
Dialogue: 0,0:17:46.60,0:17:49.24,Default,,0,0,0,,不幸的是 问题不会凭空消失\NUnfortunately, the problem does not go away.
Dialogue: 0,0:17:49.24,0:17:53.96,Default,,0,0,0,,当然了 部分应用程序不会受到闰秒的影响\NAnd now, of course, some applications it doesn't really matter,
Dialogue: 0,0:17:53.96,0:17:57.90,Default,,0,0,0,,对于很多应用来说 多1秒或者少1秒\Nbecause one second here or there for many applications
Dialogue: 0,0:17:57.90,0:17:59.96,Default,,0,0,0,,确实不会带来太大的影响\Nreally doesn't make a big deal of difference.
Dialogue: 0,0:17:59.96,0:18:03.32,Default,,0,0,0,,如果你想更新一下脸书状态\NIf you want to have on your Facebook status update
Dialogue: 0,0:18:03.32,0:18:05.62,Default,,0,0,0,,你的脸书状态在某个时刻更新成功\Nat what time you posted the Facebook status update applied,
Dialogue: 0,0:18:05.62,0:18:08.38,Default,,0,0,0,,没人会在乎更新时间是不是错了1秒\Nif that's wrong by a second, nobody's going to care.
Dialogue: 0,0:18:08.38,0:18:11.48,Default,,0,0,0,,但在操作系统和分布式系统中\NBut in operating systems and distributed systems,
Dialogue: 0,0:18:11.48,0:18:15.52,Default,,0,0,0,,我们确实会用到非常准确的时间度量机制\Noften we do actually rely on quite accurate time measurements
Dialogue: 0,0:18:15.52,0:18:17.28,Default,,0,0,0,,误差要低于1秒\Nwith sub-second accuracy.
Dialogue: 0,0:18:17.28,0:18:21.56,Default,,0,0,0,,此时 时间相差了1秒就会带来很严重的影响\NAnd in that case, actually the difference of one second can be rather significant.
Dialogue: 0,0:18:21.56,0:18:25.46,Default,,0,0,0,,在这种情况下 我们必须要考虑闰秒所带来的影响\NAnd that means we do actually have to care about these leap seconds,
Dialogue: 0,0:18:25.46,0:18:27.98,Default,,0,0,0,,而这就是我在本节课刚开始时\Nwhich brings us to the solution of the little puzzle
Dialogue: 0,0:18:27.98,0:18:30.64,Default,,0,0,0,,为大家介绍的小谜题的答案了\Nthat I presented at the beginning of this lecture,
Dialogue: 0,0:18:30.64,0:18:35.24,Default,,0,0,0,,也就是到底为什么所有系统\Nwhich is what on earth happened on the 30th of June 2012
Dialogue: 0,0:18:35.24,0:18:38.42,Default,,0,0,0,,会在2012年6月30日这天全部宕机\Nfor all of these systems to go out down at the same time.
Dialogue: 0,0:18:38.42,0:18:41.20,Default,,0,0,0,,答案是当天出现了闰秒\NWell, the answer was a leap second happened.
Dialogue: 0,0:18:41.20,0:18:44.10,Default,,0,0,0,,而过去几年一直没有出现过闰秒\NAnd there hadn't been a leap second for a couple of years before that.
Dialogue: 0,0:18:44.10,0:18:46.50,Default,,0,0,0,,而在这几年间\NAnd so, during those years, of course,
Dialogue: 0,0:18:46.50,0:18:49.22,Default,,0,0,0,,Linux内核和很多其他软件都有了更新\Nthe Linux kernel and all other software was updated,
Dialogue: 0,0:18:49.22,0:18:50.86,Default,,0,0,0,,这就引入了计算机错误\Nand the bug was introduced.
Dialogue: 0,0:18:50.86,0:18:53.12,Default,,0,0,0,,一个软件更新包含了一个进入活锁状态的判断条件\NAnd as a result, there was actually a livelock condition,
Dialogue: 0,0:18:53.12,0:18:57.38,Default,,0,0,0,,当发生闰秒时 系统进入活锁状态\Nsort of when the leap second happened, the system went into livelock.
Dialogue: 0,0:18:57.38,0:19:01.74,Default,,0,0,0,,活锁时 系统会把CPU占用到100% 使CPU不处理任何其他任务\NAnd so, it was just spinning 100% CPU and not getting any useful work done.
Dialogue: 0,0:19:01.74,0:19:05.06,Default,,0,0,0,,即使重启计算机也无法解决这个问题\NAnd even rebooting the computers didn't actually help.
Dialogue: 0,0:19:05.06,0:19:07.72,Default,,0,0,0,,管理员最后发现 解决问题的方法是\NWhat the administrators figured out then was that
Dialogue: 0,0:19:07.72,0:19:09.78,Default,,0,0,0,,必须要重置系统时钟\Nyou actually had to reset the system clock,
Dialogue: 0,0:19:09.78,0:19:12.90,Default,,0,0,0,,这样才能清除Linux内核的错误状态\Nand that somehow cleared out the bad state in the Linux kernel,
Dialogue: 0,0:19:12.90,0:19:15.80,Default,,0,0,0,,从而修复计算机\Nand allowed us to fix those computers again.
Dialogue: 0,0:19:15.80,0:19:20.30,Default,,0,0,0,,你可以想象到 这些系统的管理员经历了多么糟糕的一天\NBut you can imagine that that was a really bad day for administrators of these systems
Dialogue: 0,0:19:20.30,0:19:23.40,Default,,0,0,0,,他们重启了系统 但发现重启竟然不起作用\Nwho rebooted the systems and they still didn't work.
Dialogue: 0,0:19:23.40,0:19:28.66,Default,,0,0,0,,现在广泛使用另一种闰秒解决方案\NNow, a solution is now more widely used,
Dialogue: 0,0:19:28.66,0:19:31.18,Default,,0,0,0,,此解决方案尝试绕开\Nwhich tries to get around this problem that
Dialogue: 0,0:19:31.18,0:19:34.86,Default,,0,0,0,,多数软件不知道如何正确处理闰秒的问题\Nmost software does not know how to deal with leap seconds correctly.
Dialogue: 0,0:19:34.86,0:19:39.58,Default,,0,0,0,,此解决方案称为闰秒涂抹 其具体思想是\NAnd the solution is called smearing, leap-second smearing, which is
Dialogue: 0,0:19:39.58,0:19:42.14,Default,,0,0,0,,如果我们要插入1个闰秒\Nif we're going to insert a leap second,
Dialogue: 0,0:19:42.14,0:19:45.62,Default,,0,0,0,,我们不在某一特定时刻插入闰秒\Nrather than inserting it at one particular moment,
Dialogue: 0,0:19:45.62,0:19:49.96,Default,,0,0,0,,我们要不然干脆把闰秒平摊到一整天吧？\Nhow about we just spread that leap second out over the course of a whole day?
Dialogue: 0,0:19:49.96,0:19:51.22,Default,,0,0,0,,举例来说\NSo, let's say, for example,
Dialogue: 0,0:19:51.22,0:19:56.20,Default,,0,0,0,,在要引入闰秒的12小时之前到12小时之后\N12 hours before and 12 hours after the leap second is supposed to be introduced,
Dialogue: 0,0:19:56.20,0:20:00.32,Default,,0,0,0,,我们把时钟稍微调慢一点点\Nwe just slow down the clocks ever so slightly enough
Dialogue: 0,0:20:00.32,0:20:07.54,Default,,0,0,0,,使得在这个周期内 我们总共增加了额外的1秒\Nso that then in total, one additional second has elapsed over the course of this period,
Dialogue: 0,0:20:07.54,0:20:12.42,Default,,0,0,0,,这样就不会出现时间不连续的情况\Nbut without this discontinuity of time where we've added that extra second,
Dialogue: 0,0:20:12.42,0:20:14.68,Default,,0,0,0,,否则很多软件可能就崩溃了\Nwhich confuses all of the software.
Dialogue: 0,0:20:15.32,0:20:19.90,Default,,0,0,0,,这可以说是一种黑科技 这不是一个很优雅的解决方案\NIt's kind of a hack really. It's not a very elegant solution.
Dialogue: 0,0:20:20.38,0:20:23.64,Default,,0,0,0,,但这是实际中我们能想到的最佳解决方案了\NBut it might be pragmatically the best that we can come up with
Dialogue: 0,0:20:23.64,0:20:27.66,Default,,0,0,0,,有太多的软件不知道该怎么处理闰秒\Njust given the problem of so much software out there
Dialogue: 0,0:20:27.66,0:20:29.46,Default,,0,0,0,,面对这个问题 我们只能这么处理\Nthat doesn't know how to deal with leap seconds.
Dialogue: 0,0:20:29.46,0:20:32.88,Default,,0,0,0,,在现实中 我们没办法更新所有的软件\NAnd realistically, we're not going to manage to update all of that software.
Dialogue: 0,0:20:32.88,0:20:36.56,Default,,0,0,0,,因此 这种涂抹方法可能就是最佳的解决方案\NSo, probably this smearing approach is the best we have.
Dialogue: 0,0:20:36.56,0:20:41.32,Default,,0,0,0,,不管怎么说 这就是闰秒背后的故事\NBut anyway, that is the backstory of leap seconds,
Dialogue: 0,0:20:41.32,0:20:46.42,Default,,0,0,0,,以及为什么闰秒会对我们的系统造成如此严重的影响\Nand why they actually have quite a significant impact on our systems.
